// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestTip
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// CalculateTipBasic - Use 'CalculateTipBasicParams' to pass parameters into this method.
        /// </summary>
        public void CalculateTipBasic()
        {
            #region Variable Declarations
            WinListItem uITip_CalculatorShortcListItem = this.UIItemWindow.UIFolderViewWindow.UITip_CalculatorShortcListItem;
            WinButton uIOpenButton = this.UIOpenFileSecurityWarnWindow.UIOpenWindow.UIOpenButton;
            WinEdit uITotalTextBoxEdit = this.UIForm1Window.UITotalTextBoxWindow.UITotalTextBoxEdit;
            WinButton uIComputeTipButton = this.UIForm1Window.UIComputeTipWindow.UIComputeTipButton;
            WinButton uICloseButton = this.UIForm1Window.UIForm1TitleBar.UICloseButton;
            #endregion

            // Double-Click 'Tip_Calculator - Shortcut' list item
            Mouse.DoubleClick(uITip_CalculatorShortcListItem, new Point(38, 29));

            // Click '&Open' button
            Mouse.Click(uIOpenButton, new Point(55, 11));

            // Type '10' in 'TotalTextBox' text box
            uITotalTextBoxEdit.Text = this.CalculateTipBasicParams.UITotalTextBoxEditText;

            // Click 'Compute Tip' button
            Mouse.Click(uIComputeTipButton, new Point(51, 11));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(23, 16));
        }
        
        /// <summary>
        /// BasicTipCalculation - Use 'BasicTipCalculationParams' to pass parameters into this method.
        /// </summary>
        public void BasicTipCalculation()
        {
            #region Variable Declarations
            WinListItem uITip_CalculatorShortcListItem = this.UIItemWindow.UIFolderViewWindow.UITip_CalculatorShortcListItem;
            WinButton uIOpenButton = this.UIOpenFileSecurityWarnWindow.UIOpenWindow.UIOpenButton;
            WinEdit uITotalTextBoxEdit = this.UIForm1Window.UITotalTextBoxWindow.UITotalTextBoxEdit;
            WinButton uIComputeTipButton = this.UIForm1Window.UIComputeTipWindow.UIComputeTipButton;
            #endregion

            // Double-Click 'Tip_Calculator - Shortcut' list item
            Mouse.DoubleClick(uITip_CalculatorShortcListItem, new Point(38, 43));

            // Click '&Open' button
            Mouse.Click(uIOpenButton, new Point(62, 17));

            // Type '10' in 'TotalTextBox' text box
            uITotalTextBoxEdit.Text = this.BasicTipCalculationParams.UITotalTextBoxEditText;

            // Click 'Compute Tip' button
            Mouse.Click(uIComputeTipButton, new Point(41, 12));
        }
        
        /// <summary>
        /// AssertTotalCorrect - Use 'AssertTotalCorrectExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertTotalCorrect()
        {
            #region Variable Declarations
            WinEdit uITipTextBoxEdit = this.UIForm1Window.UITipTextBoxWindow.UITipTextBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'TipTextBox' text box equals '12'
            Assert.AreEqual(this.AssertTotalCorrectExpectedValues.UITipTextBoxEditText, uITipTextBoxEdit.Text);
        }
        
        #region Properties
        public virtual CalculateTipBasicParams CalculateTipBasicParams
        {
            get
            {
                if ((this.mCalculateTipBasicParams == null))
                {
                    this.mCalculateTipBasicParams = new CalculateTipBasicParams();
                }
                return this.mCalculateTipBasicParams;
            }
        }
        
        public virtual BasicTipCalculationParams BasicTipCalculationParams
        {
            get
            {
                if ((this.mBasicTipCalculationParams == null))
                {
                    this.mBasicTipCalculationParams = new BasicTipCalculationParams();
                }
                return this.mBasicTipCalculationParams;
            }
        }
        
        public virtual AssertTotalCorrectExpectedValues AssertTotalCorrectExpectedValues
        {
            get
            {
                if ((this.mAssertTotalCorrectExpectedValues == null))
                {
                    this.mAssertTotalCorrectExpectedValues = new AssertTotalCorrectExpectedValues();
                }
                return this.mAssertTotalCorrectExpectedValues;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIOpenFileSecurityWarnWindow UIOpenFileSecurityWarnWindow
        {
            get
            {
                if ((this.mUIOpenFileSecurityWarnWindow == null))
                {
                    this.mUIOpenFileSecurityWarnWindow = new UIOpenFileSecurityWarnWindow();
                }
                return this.mUIOpenFileSecurityWarnWindow;
            }
        }
        
        public UIForm1Window UIForm1Window
        {
            get
            {
                if ((this.mUIForm1Window == null))
                {
                    this.mUIForm1Window = new UIForm1Window();
                }
                return this.mUIForm1Window;
            }
        }
        #endregion
        
        #region Fields
        private CalculateTipBasicParams mCalculateTipBasicParams;
        
        private BasicTipCalculationParams mBasicTipCalculationParams;
        
        private AssertTotalCorrectExpectedValues mAssertTotalCorrectExpectedValues;
        
        private UIItemWindow mUIItemWindow;
        
        private UIOpenFileSecurityWarnWindow mUIOpenFileSecurityWarnWindow;
        
        private UIForm1Window mUIForm1Window;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CalculateTipBasic'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class CalculateTipBasicParams
    {
        
        #region Fields
        /// <summary>
        /// Type '10' in 'TotalTextBox' text box
        /// </summary>
        public string UITotalTextBoxEditText = "10";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'BasicTipCalculation'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class BasicTipCalculationParams
    {
        
        #region Fields
        /// <summary>
        /// Type '10' in 'TotalTextBox' text box
        /// </summary>
        public string UITotalTextBoxEditText = "10";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertTotalCorrect'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertTotalCorrectExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'TipTextBox' text box equals '12'
        /// </summary>
        public string UITipTextBoxEditText = "12";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIFolderViewWindow UIFolderViewWindow
        {
            get
            {
                if ((this.mUIFolderViewWindow == null))
                {
                    this.mUIFolderViewWindow = new UIFolderViewWindow(this);
                }
                return this.mUIFolderViewWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIFolderViewWindow mUIFolderViewWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFolderViewWindow : WinWindow
    {
        
        public UIFolderViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            #endregion
        }
        
        #region Properties
        public WinListItem UITip_CalculatorShortcListItem
        {
            get
            {
                if ((this.mUITip_CalculatorShortcListItem == null))
                {
                    this.mUITip_CalculatorShortcListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUITip_CalculatorShortcListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Tip_Calculator - Shortcut";
                    #endregion
                }
                return this.mUITip_CalculatorShortcListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUITip_CalculatorShortcListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOpenFileSecurityWarnWindow : WinWindow
    {
        
        public UIOpenFileSecurityWarnWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Open File - Security Warning";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Open File - Security Warning");
            #endregion
        }
        
        #region Properties
        public UIOpenWindow UIOpenWindow
        {
            get
            {
                if ((this.mUIOpenWindow == null))
                {
                    this.mUIOpenWindow = new UIOpenWindow(this);
                }
                return this.mUIOpenWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOpenWindow mUIOpenWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOpenWindow : WinWindow
    {
        
        public UIOpenWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "4426";
            this.WindowTitles.Add("Open File - Security Warning");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Open File - Security Warning");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIForm1Window : WinWindow
    {
        
        public UIForm1Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Form1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public UITotalTextBoxWindow UITotalTextBoxWindow
        {
            get
            {
                if ((this.mUITotalTextBoxWindow == null))
                {
                    this.mUITotalTextBoxWindow = new UITotalTextBoxWindow(this);
                }
                return this.mUITotalTextBoxWindow;
            }
        }
        
        public UIComputeTipWindow UIComputeTipWindow
        {
            get
            {
                if ((this.mUIComputeTipWindow == null))
                {
                    this.mUIComputeTipWindow = new UIComputeTipWindow(this);
                }
                return this.mUIComputeTipWindow;
            }
        }
        
        public UIForm1TitleBar UIForm1TitleBar
        {
            get
            {
                if ((this.mUIForm1TitleBar == null))
                {
                    this.mUIForm1TitleBar = new UIForm1TitleBar(this);
                }
                return this.mUIForm1TitleBar;
            }
        }
        
        public UITipTextBoxWindow UITipTextBoxWindow
        {
            get
            {
                if ((this.mUITipTextBoxWindow == null))
                {
                    this.mUITipTextBoxWindow = new UITipTextBoxWindow(this);
                }
                return this.mUITipTextBoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITotalTextBoxWindow mUITotalTextBoxWindow;
        
        private UIComputeTipWindow mUIComputeTipWindow;
        
        private UIForm1TitleBar mUIForm1TitleBar;
        
        private UITipTextBoxWindow mUITipTextBoxWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITotalTextBoxWindow : WinWindow
    {
        
        public UITotalTextBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "TotalTextBox";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITotalTextBoxEdit
        {
            get
            {
                if ((this.mUITotalTextBoxEdit == null))
                {
                    this.mUITotalTextBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITotalTextBoxEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITotalTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITotalTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIComputeTipWindow : WinWindow
    {
        
        public UIComputeTipWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "CaclulateButton";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UIComputeTipButton
        {
            get
            {
                if ((this.mUIComputeTipButton == null))
                {
                    this.mUIComputeTipButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIComputeTipButton.SearchProperties[WinButton.PropertyNames.Name] = "Compute Tip";
                    this.mUIComputeTipButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUIComputeTipButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIComputeTipButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIForm1TitleBar : WinTitleBar
    {
        
        public UIForm1TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UITipTextBoxWindow : WinWindow
    {
        
        public UITipTextBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "TipTextBox";
            this.WindowTitles.Add("Form1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITipTextBoxEdit
        {
            get
            {
                if ((this.mUITipTextBoxEdit == null))
                {
                    this.mUITipTextBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITipTextBoxEdit.WindowTitles.Add("Form1");
                    #endregion
                }
                return this.mUITipTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITipTextBoxEdit;
        #endregion
    }
}
